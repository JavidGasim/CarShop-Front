// SignalRContext.js
import React, { createContext, useEffect, useState } from "react";
import { HubConnectionBuilder } from "@microsoft/signalr";
import Cookies from "js-cookie";
import { toast } from "react-toastify";

export const SignalRContext = createContext();

export const SignalRProvider = ({ children }) => {
  const [connection, setConnection] = useState(null);

  useEffect(() => {
    const username = Cookies.get("username");
    const token = Cookies.get(username);

    const newConnection = new HubConnectionBuilder()
      .withUrl("https://localhost:7268/carHub", {
        accessTokenFactory: () => token,
      })
      .withAutomaticReconnect()
      .build();

    setConnection(newConnection);
  }, []);

  useEffect(() => {
    if (connection) {
      connection
        .start()
        .then(() => {
          console.log("SignalR baÄŸlantÄ±sÄ± uÄŸurla quruldu.");

          // ğŸŸ¡ Avtomobil sahibinÉ™ xÃ¼susi toast (NotifyOwner)
          connection.on("NotifyOwner", (data) => {
            console.log(data.message);
            toast.info(data.message, {
              position: "top-right",
              autoClose: 5000,
            });
          });

          // ğŸ”„ Feedback siyahÄ±sÄ± yenilÉ™nmÉ™si Ã¼Ã§Ã¼n (amma toast yoxdur!)
          connection.on("ReceiveFeedback", (data) => {
            // buraya sadÉ™cÉ™ feedback siyahÄ±sÄ±nÄ± yenilÉ™mÉ™k Ã¼Ã§Ã¼n logic É™lavÉ™ et
            console.log("Yeni feedback gÉ™ldi:", data);

            // mÉ™sÉ™lÉ™n: refreshFeedbacks(data);
          });
        })
        .catch((err) => console.log("SignalR baÄŸlantÄ± xÉ™tasÄ±:", err));
    }
  }, [connection]);

  return (
    <SignalRContext.Provider value={{ connection }}>
      {children}
    </SignalRContext.Provider>
  );
};
